name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    services:
      # Serviço para o banco de dados PostgreSQL
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aprova_ja_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env.local
        run: |
          cat > .env.local << 'EOL'
          # Configurações do banco de dados de teste
          DATABASE_URL=postgresql://postgres:postgres@localhost:5432/aprova_ja_test?schema=public
          
          # Configurações do NextAuth
          NEXTAUTH_URL=http://localhost:3000
          NEXTAUTH_SECRET=test-secret
          
          # Configurações do Sentry (apenas para teste)
          NEXT_PUBLIC_SENTRY_DSN=
          SENTRY_AUTH_TOKEN=
          
          # Configurações de teste
          NODE_ENV=test
          EOL
      
      - name: Run database migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/aprova_ja_test?schema=public
      
      - name: Build application
        run: npm run build
      
      - name: Start server
        run: |
          npm run start & npx wait-on http://localhost:3000
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/aprova_ja_test?schema=public
      
      - name: Run E2E tests
        run: npm run test:e2e:ci
        env:
          CYPRESS_BASE_URL: http://localhost:3000
          NODE_ENV: test
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots
          path: cypress/screenshots/
          if-no-files-found: ignore
      
      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-videos
          path: cypress/videos/
          if-no-files-found: ignore
